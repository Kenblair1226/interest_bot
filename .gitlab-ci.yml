stages:
  - test
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY/$CI_REGISTRY_USER/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  CGO_ENABLED: "1"  # Enable CGo for all stages

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_BUILDKIT: "1"  # Enable BuildKit for faster builds
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --build-arg CGO_ENABLED=1 -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  only:
    - main
    - tags

test:
  stage: test
  image: golang:1.22
  script:
    - go test ./src/...
  only:
    - main
    - merge_requests

.lint:
  stage: test
  image: golangci/golangci-lint:v1.56.2
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go
      - .cache
  before_script:
    - mkdir -p .cache
  script:
    - golangci-lint run 
      --timeout=5m 
      --modules-download-mode=readonly 
      --fast 
      --config=.golangci.yml 
      ./src/...
  only:
    - main
    - merge_requests

deploy:
  stage: deploy
  image: alpine:latest
  variables:
    GIT_STRATEGY: none  # We don't need the source code for deployment
  before_script:
    - apk add --no-cache openssh-client tailscale
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - tailscale up --authkey=$TAILSCALE_AUTHKEY
  script:
    - scp docker-compose.yml $SSH_USER@$NAS_HOST:/opt/interest_bot/
    - |
      ssh $SSH_USER@$NAS_HOST "
        cd /opt/interest_bot && \
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && \
        DOCKER_IMAGE=$DOCKER_IMAGE \
        TELEGRAM_TOKEN=$TELEGRAM_TOKEN \
        docker-compose up -d --force-recreate"
  only:
    - main